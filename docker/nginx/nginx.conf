worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Backend upstream (Laravel)
    upstream laravel_backend {
        server laravel:9000; # PHP-FPM port
        # health_check; # Nginx Plus feature, typically healthchecks are in docker-compose
    }

    # FastAPI Microservices upstream
    upstream fastapi_services {
        server fastapi:8000;
        # health_check; # Nginx Plus feature
    }

    # Frontend Dev Server upstream (Vue Vite)
    upstream frontend_dev_server {
        server frontend:3000;
    }

    server {
        listen 80;
        listen 443 ssl;
        # Define your tenant domains and localhost, and a wildcard for dynamic subdomains
        server_name tenanta.localhost tenantb.localhost *.localhost localhost; 

        ssl_certificate /etc/nginx/certs/localhost.crt; # Path to your SSL certificate
        ssl_certificate_key /etc/nginx/certs/localhost.key; # Path to your SSL private key
        # You'll need to generate these (e.g., with mkcert or openssl)

        # Health check endpoint for Nginx itself
        location /health {
            return 200 "Healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Frontend application - Serve directly or proxy to dev server
        location / {
            # In production, this would serve compiled static files:
            # root /usr/share/nginx/html/frontend_dist;
            # try_files $uri $uri/ /index.html;

            # In development, proxy to the Vite dev server
            proxy_pass http://frontend_dev_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Laravel API Gateway
        location /api/v1/ {
            # Ensure the correct path for Laravel. If Laravel handles '/api/v1/properties', then use:
            rewrite ^/api/v1/(.*)$ /$1 break; # Remove /api/v1/ prefix for Laravel
            proxy_pass http://laravel_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # FastAPI Microservices Gateway (e.g., dynamic pricing, AI chatbot, blockchain)
        location /fastapi/ {
            rewrite ^/fastapi/(.*)$ /$1 break;
            proxy_pass http://fastapi_services;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # WebSocket proxy for real-time updates (e.g., IoT status, price updates)
        location /ws/ {
            proxy_pass http://fastapi_services; # Assuming FastAPI handles WebSockets
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }

        # Example for static assets from Laravel (if any)
        location ~* \.(css|js|gif|jpe?g|png)$ {
            root /var/www/html/public; # Assuming Laravel's public folder
            expires 1y;
            add_header Cache-Control "public";
        }
    }
}
